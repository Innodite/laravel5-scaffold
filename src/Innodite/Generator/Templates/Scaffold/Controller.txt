<?php namespace $NAMESPACE$;

use App\Http\Requests;
use $REQUEST_NAMESPACE$\Create$MODEL_NAME$Request;
use $MODEL_NAMESPACE$;
use Illuminate\Http\Request;
use Innodite\Controller\AppBaseController;
use Response;
use Flash;
use Schema;

class $MODEL_NAME$Controller extends AppBaseController
{

	/**
	 * Display a listing of the Post.
	 *
	 * @param Request $request
	 *
	 * @return Response
	 */
	public function index(Request $request)
	{
		$query = $MODEL_NAME$::query();
        $columns = Schema::getColumnListing('$TABLE_NAME$');
        $attributes = array();

        foreach($columns as $attribute){
            if($request[$attribute] == true)
            {
                $query->where($attribute, $request[$attribute]);
                $attributes[$attribute] =  $request[$attribute];
            }else{
                $attributes[$attribute] =  null;
            }
        };

        $$MODEL_NAME_PLURAL_CAMEL$ = $query->get();

        return view('$MODEL_NAME_PLURAL_CAMEL$.index')
            ->with('$MODEL_NAME_PLURAL_CAMEL$', $$MODEL_NAME_PLURAL_CAMEL$)
            ->with('attributes', $attributes);
	}

	/**
	 * Show the form for creating a new $MODEL_NAME$.
	 *
	 * @return Response
	 */
	public function create()
	{
		return view('$MODEL_NAME_PLURAL_CAMEL$.create');
	}

	/**
	 * Store a newly created $MODEL_NAME$ in storage.
	 *
	 * @param Create$MODEL_NAME$Request $request
	 *
	 * @return Response
	 */
	public function store(Create$MODEL_NAME$Request $request)
	{
        $input = $request->all();

		$$MODEL_NAME_CAMEL$ = $MODEL_NAME$::create($input);
		
		// Last Message
		//'$MODEL_NAME$ saved successfully.'
		Flash::message(trans('application.model.message.basic.succesfull.create'));

		return redirect(route('$MODEL_NAME_PLURAL_CAMEL$.index'));
	}

	/**
	 * Display the specified $MODEL_NAME$.
	 *
	 * @param  int $id
	 *
	 * @return Response
	 */
	public function show($id)
	{
		$$MODEL_NAME_CAMEL$ = $MODEL_NAME$::find($id);

		if(empty($$MODEL_NAME_CAMEL$))
		{
			// Last Message
			//'$MODEL_NAME$ not found'
			Flash::error(trans('application.model.message.basic.failure.norows'));
			return redirect(route('$MODEL_NAME_PLURAL_CAMEL$.index'));
		}

		return view('$MODEL_NAME_PLURAL_CAMEL$.show')->with('$MODEL_NAME_CAMEL$', $$MODEL_NAME_CAMEL$);
	}

	/**
	 * Show the form for editing the specified $MODEL_NAME$.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
		$$MODEL_NAME_CAMEL$ = $MODEL_NAME$::find($id);

		if(empty($$MODEL_NAME_CAMEL$))
		{
			// Last Message
			//'$MODEL_NAME$ not found'
			Flash::error(trans('application.model.message.basic.failure.norows'));
			return redirect(route('$MODEL_NAME_PLURAL_CAMEL$.index'));
		}

		return view('$MODEL_NAME_PLURAL_CAMEL$.edit')->with('$MODEL_NAME_CAMEL$', $$MODEL_NAME_CAMEL$);
	}

	/**
	 * Update the specified $MODEL_NAME$ in storage.
	 *
	 * @param  int    $id
	 * @param Create$MODEL_NAME$Request $request
	 *
	 * @return Response
	 */
	public function update($id, Create$MODEL_NAME$Request $request)
	{
		/** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
		$$MODEL_NAME_CAMEL$ = $MODEL_NAME$::find($id);

		if(empty($$MODEL_NAME_CAMEL$))
		{
			// Last Message
			//'$MODEL_NAME$ not found'
			Flash::error(trans('application.model.message.basic.failure.norows'));
			return redirect(route('$MODEL_NAME_PLURAL_CAMEL$.index'));
		}

		$$MODEL_NAME_CAMEL$->fill($request->all());
		$$MODEL_NAME_CAMEL$->save();
		// Last Message
		//'$MODEL_NAME$ updated successfully.'
		Flash::message(trans('application.model.message.basic.succesfull.update'));

		return redirect(route('$MODEL_NAME_PLURAL_CAMEL$.index'));
	}

	/**
	 * Remove the specified $MODEL_NAME$ from storage.
	 *
	 * @param  int $id
	 *
	 * @return Response
	 */
	public function destroy($id)
	{
		/** @var $MODEL_NAME$ $$MODEL_NAME_CAMEL$ */
		$$MODEL_NAME_CAMEL$ = $MODEL_NAME$::find($id);

		if(empty($$MODEL_NAME_CAMEL$))
		{
			// Last Message
			//'$MODEL_NAME$ not found'
			Flash::error(trans('application.model.message.basic.failure.norows'));
			return redirect(route('$MODEL_NAME_PLURAL_CAMEL$.index'));
		}

		$$MODEL_NAME_CAMEL$->delete();
		// Last Message
		// '$MODEL_NAME$ deleted successfully.'
		Flash::message(trans('application.model.message.basic.succesfull.delete'));

		return redirect(route('$MODEL_NAME_PLURAL_CAMEL$.index'));
	}
}
